name: Fetch TMDb Top Rated

permissions:
  contents: write

on:
  schedule:
    - cron: '0 4 * * *'      # daily at 4 AM UTC
  workflow_dispatch: {}

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch top-rated movies (pages 1â€“40)
        run: |
          mkdir -p data
          for page in {1..40}; do
            curl -s "https://api.themoviedb.org/3/movie/top_rated?api_key=${{ secrets.TMDB_API_KEY }}&language=en-US&page=$page" \
              | jq '.results' > data/page${page}.json
          done

      - name: Combine into single list
        run: |
          jq -s 'flatten' data/page*.json > data/all_movies.json

      - name: Enrich with streaming/free/adSupported providers only
        run: |
          jq -c '.[]' data/all_movies.json | \
          while read -r movie; do
            id=$(jq -r '.id' <<<"$movie")
            raw=$(curl -s "https://api.themoviedb.org/3/movie/${id}/watch/providers?api_key=${{ secrets.TMDB_API_KEY }}")
            link=$(jq -r '.results.US.link // empty' <<<"$raw")
            # This next command still CHECKS for providers, but we won't save them.
            providers=$(jq -c '
              [ (.results.US.flatrate?[]?),
                (.results.US.free?[]?),
                (.results.US.adSupported?[]?) ]
              | flatten
            ' <<<"$raw")
            # Only include movies that have at least one streaming provider.
            if [[ $(jq 'length' <<<"$providers") -gt 0 ]]; then
              # MODIFIED: This line no longer adds the heavy 'watch_providers' data.
              # It only adds the essential 'watch_link'.
              echo "$movie" \
                | jq --arg link "$link" \
                     '. + { watch_link: $link }'
            fi
          done | jq -s '.' > data/movies.json

      - name: Slice to a max of 800 movies (optional cap)
        run: |
          jq '.[0:800]' data/movies.json > data/movies.json.tmp
          mv data/movies.json.tmp data/movies.json

      # NEW STEP: This removes all unnecessary fields from the final file.
      - name: Prune to only necessary fields for fast loading
        run: |
          jq '[.[] | {id, title, release_date, poster_path, genre_ids, watch_link}]' data/movies.json > data/movies.json.tmp
          mv data/movies.json.tmp data/movies.json

      - name: Commit updated movies.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/movies.json
          # MODIFIED: Updated the commit message to be more accurate.
          git commit -m "chore: update and prune TMDb movie cache" || echo "No changes"
          git push
